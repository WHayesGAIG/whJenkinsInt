<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-12-14T13:59:31Z" name="Suite_AllTest" finished-at="2018-12-14T13:59:37Z" duration-ms="6518">
    <groups>
    </groups>
    <test started-at="2018-12-14T13:59:31Z" name="TestAllTest" finished-at="2018-12-14T13:59:37Z" duration-ms="6518">
      <class name="whTestPkg.WandaTestExample">
        <test-method is-config="true" signature="setUP()[pri:0, instance:whTestPkg.WandaTestExample@4f67eb2a]" started-at="2018-12-14T13:59:31Z" name="setUP" finished-at="2018-12-14T13:59:31Z" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:whTestPkg.tstGoogleSearch@4a668b6e]" started-at="2018-12-14T13:59:31Z" name="setUpTest" finished-at="2018-12-14T13:59:32Z" duration-ms="1576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="sampleTest0()[pri:0, instance:whTestPkg.WandaTestExample@4f67eb2a]" started-at="2018-12-14T13:59:32Z" name="sampleTest0" finished-at="2018-12-14T13:59:32Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest0 -->
        <test-method signature="sampleTest1()[pri:0, instance:whTestPkg.WandaTestExample@4f67eb2a]" started-at="2018-12-14T13:59:32Z" name="sampleTest1" finished-at="2018-12-14T13:59:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest1 -->
        <test-method signature="sampleTest2()[pri:0, instance:whTestPkg.WandaTestExample@4f67eb2a]" started-at="2018-12-14T13:59:32Z" name="sampleTest2" finished-at="2018-12-14T13:59:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest2 -->
        <test-method signature="sampleTest4()[pri:0, instance:whTestPkg.WandaTestExample@4f67eb2a]" started-at="2018-12-14T13:59:32Z" name="sampleTest4" finished-at="2018-12-14T13:59:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest4 -->
        <test-method signature="whTestReport()[pri:0, instance:whTestPkg.WandaTestExample@4f67eb2a]" started-at="2018-12-14T13:59:32Z" name="whTestReport" finished-at="2018-12-14T13:59:33Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whTestReport -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:whTestPkg.WandaTestExample@4f67eb2a]" started-at="2018-12-14T13:59:35Z" name="tearDown" finished-at="2018-12-14T13:59:35Z" duration-ms="277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:whTestPkg.tstGoogleSearch@4a668b6e]" started-at="2018-12-14T13:59:35Z" name="tearDownTest" finished-at="2018-12-14T13:59:37Z" duration-ms="2315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- whTestPkg.WandaTestExample -->
      <class name="whTestPkg.tstGoogleSearch">
        <test-method signature="googleSearch()[pri:0, instance:whTestPkg.tstGoogleSearch@4a668b6e]" started-at="2018-12-14T13:59:33Z" name="googleSearch" finished-at="2018-12-14T13:59:35Z" duration-ms="2145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- googleSearch -->
        <test-method signature="sampleTest0()[pri:0, instance:whTestPkg.tstGoogleSearch@4a668b6e]" started-at="2018-12-14T13:59:35Z" name="sampleTest0" finished-at="2018-12-14T13:59:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest0 -->
        <test-method signature="sampleTest1()[pri:0, instance:whTestPkg.tstGoogleSearch@4a668b6e]" started-at="2018-12-14T13:59:35Z" name="sampleTest1" finished-at="2018-12-14T13:59:35Z" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at whTestPkg.tstGoogleSearch.sampleTest1(tstGoogleSearch.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest1 -->
        <test-method signature="sampleTest2()[pri:0, instance:whTestPkg.tstGoogleSearch@4a668b6e]" started-at="2018-12-14T13:59:35Z" name="sampleTest2" finished-at="2018-12-14T13:59:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest2 -->
        <test-method signature="sampleTest4()[pri:0, instance:whTestPkg.tstGoogleSearch@4a668b6e]" started-at="2018-12-14T13:59:35Z" name="sampleTest4" finished-at="2018-12-14T13:59:35Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at whTestPkg.tstGoogleSearch.sampleTest4(tstGoogleSearch.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest4 -->
      </class> <!-- whTestPkg.tstGoogleSearch -->
    </test> <!-- TestAllTest -->
  </suite> <!-- Suite_AllTest -->
</testng-results>
